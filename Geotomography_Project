clear all;
close all;
clc;

% Proses Forward Modelling
% Menghitung Length raypath
Pos = zeros(25,4);
Pos(:,1) = 0;
Pos([1:5],2) = 1;
Pos([6:10],2) = 3;
Pos([11:15],2) = 5;
Pos([16:20],2) = 7;
Pos([21:25],2) = 9;
Pos(:,3) = 11;
inp = [5 7 9 11 13];
Pos(:,4) = [inp inp inp inp inp]';
R = zeros(25,3);
for b = 1:25
    Length(b) = sqrt((Pos(b,1)-Pos(b,3))^2+(Pos(b,2)-Pos(b,4))^2);
    Gradient(b,1) = (2-Pos(b,4))/(Pos(b,4)-Pos(b,2))*(Pos(b,3)-Pos(b,1))+Pos(b,3);
    Gradient(b,2) = (6-Pos(b,4))/(Pos(b,4)-Pos(b,2))*(Pos(b,3)-Pos(b,1))+Pos(b,3);
    if Gradient(b,1) >= 0 & Gradient(b,1) <= 11 
        R(b,1) = sqrt((Pos(b,1)-Gradient(b,1))^2+(Pos(b,2)-2)^2);
        if b > 5
            R(b,1) = sqrt((Pos(b,3)-Pos(b,1))^2+(Pos(b,4)-Pos(b,2))^2)-R(b,1);
        else
            R(b,1) = R(b,1);
        end
    else
        R(b,1) = 0;
    end
    if (Gradient(b,1) >= 0 & Gradient(b,1) <= 11) | (Gradient(b,2) >= 0 & Gradient(b,2) <= 11)
        R(b,2) = sqrt((Gradient(b,1)-Pos(b,3))^2+(2-Pos(b,4))^2);
        if b > 3 & b < 6
            R(b,2) = sqrt((Gradient(b,1)-Gradient(b,2))^2+(2-6)^2);
        elseif (b >= 6 & b < 7) | (b >= 11 & b < 12)  
            R(b,2) = sqrt((Gradient(b,1)-Pos(b,1))^2+(2-Pos(b,2))^2);
        elseif (b >= 9 & b < 11) | (b >= 14 & b < 16)
            R(b,2) = sqrt((Gradient(b,2)-Pos(b,1))^2+(6-Pos(b,2))^2);
        elseif (b >= 16 & b < 17) | (b >= 21 & b < 22)
            R(b,2) = sqrt((Gradient(b,2)-Gradient(b,1))^2+(6-2)^2);
        elseif (b >= 17 & b < 19) | (b >= 22 & b < 24)
            R(b,2) = sqrt((Gradient(b,2)-Pos(b,3))^2+(6-Pos(b,4))^2);
        else
            R(b,2) = R(b,2);
        end
    else
        R(b,2) = 0;
    end
    if Gradient(b,2) >= 0 & Gradient(b,2) <= 11 
        R(b,3) = sqrt((Pos(b,3)-Gradient(b,2))^2+(Pos(b,4)-6)^2);
        if (b >= 16 & b < 19) | (b >= 21 & b < 24)
            R(b,3) = sqrt((Pos(b,1)-Gradient(b,2))^2+(Pos(b,2)-6)^2);
        else
            R(b,3) = R(b,3);
        end
    else
        R(b,3) = 0
    end
end
R(1,1) = 11;
R(7,2) = 11;
R(8,2) = sqrt((Pos(8,1)-Pos(8,3))^2+(Pos(8,2)-Pos(8,4))^2);
R(12,2) = sqrt((Pos(12,1)-Pos(12,3))^2+(Pos(12,2)-Pos(12,4))^2);
R(13,2) = 11;
R(19,3) = 11;
R(20,3) = sqrt((Pos(20,1)-Pos(20,3))^2+(Pos(20,2)-Pos(20,4))^2);
R(24,3) = sqrt((Pos(24,1)-Pos(24,3))^2+(Pos(24,2)-Pos(24,4))^2);
R(25,3) = 11;

% Sintetis Travel Time
V = [1000 2000 1000]';
S = 1./V;
t = R*S



% Proses Inverse Modelling
% Membuat sel-sel tomografi
x = 0:1:11;
y = 0:1:10;
[Mesh.X Mesh.Y] = meshgrid(x,y);
for i = 1:12
    v([1:2],i) = 1000;
    v([3:6],i) = 2000;
    v([7:11],i) = 1000;
end
figure(1)
pcolor(Mesh.X,Mesh.Y,v);
colormap(cool);
set(gca,'Ydir','Reverse');
colorbar;
hold on;

% Membuat serta mengeplot raypath dan titik source receiver
x = zeros(10,5);
y = zeros(10,5);
for i = 1:2:9
    for j = 2:2:10
        x(i,:) = 0;
        x(j,:) = 11;
        y(i,1) = 1;
        y(i,2) = 3;
        y(i,3) = 5;
        y(i,4) = 7;
        y(i,5) = 9;
        y(j,:) = j-1;
    end
end
plot(x,y,'y');
scatter(x(1,:),y(1,:),'*g','MarkerFaceColor','g','linewidth',3.5);
scatter(x(10,:),y(1,:),'vk','MarkerFaceColor','r');
hold off;

% Proses BPT
Leng = sum(R,2);
Srat = zeros(25,1)
for h = 1:25
    Srat(h) = (t(h)/Leng(h)); % Slowness rata-rata
end

% Menentukan titik Gradienten batas raypath tiap sel
% Raypath 2 (Titik2 Gradienten)
for i = 1:11
    for j = 1:3
        k2(j) = j;
        m2(i) = i;
        y2 = (m2-Pos(2,3))./(Pos(2,3)-Pos(2,1)).*(Pos(2,4)-Pos(2,2))+Pos(2,4);
        x2 = (k2-Pos(2,4))./(Pos(2,4)-Pos(2,2)).*(Pos(2,3)-Pos(2,1))+Pos(2,3);
    end
end
% Raypath 3 (Titik2 Gradienten)
for i = 1:11
    for j = 1:5
        k3(j) = j;
        m3(i) = i;
        y3 = (m3-Pos(3,3))./(Pos(3,3)-Pos(3,1)).*(Pos(3,4)-Pos(3,2))+Pos(3,4);
        x3 = (k3-Pos(3,4))./(Pos(3,4)-Pos(3,2)).*(Pos(3,3)-Pos(3,1))+Pos(3,3);
    end
end
% Raypath 4 (Titik2 Gradienten)
for i = 1:11
    for j = 1:7
        k4(j) = j;
        m4(i) = i;
        y4 = (m4-Pos(4,3))./(Pos(4,3)-Pos(4,1)).*(Pos(4,4)-Pos(4,2))+Pos(4,4);
        x4 = (k4-Pos(4,4))./(Pos(4,4)-Pos(4,2)).*(Pos(4,3)-Pos(4,1))+Pos(4,3);
    end
end
% Raypath 5 (Titik2 Gradienten)
for i = 1:11
    for j = 1:9
        k5(j) = j;
        m5(i) = i;
        y5 = (m5-Pos(5,3))./(Pos(5,3)-Pos(5,1)).*(Pos(5,4)-Pos(5,2))+Pos(5,4);
        x5 = (k5-Pos(5,4))./(Pos(5,4)-Pos(5,2)).*(Pos(5,3)-Pos(5,1))+Pos(5,3);
    end
end
% Raypath 6 (Titik2 Gradienten)
for i = 1:11
    for j = 1:3
        k6_1(j) = j;
        k6 = sort(k6_1,'descend');
        m6(i) = i;
        y6 = (m6-Pos(6,3))./(Pos(6,3)-Pos(6,1)).*(Pos(6,4)-Pos(6,2))+Pos(6,4);
        x6 = (k6-Pos(6,4))./(Pos(6,4)-Pos(6,2)).*(Pos(6,3)-Pos(6,1))+Pos(6,3);
    end
end
% Raypath 8 (Titik2 Gradienten)
for i = 1:11
    for j = 1:3
        k8(j) = j+2;
        m8(i) = i;
        y8 = (m8-Pos(8,3))./(Pos(8,3)-Pos(8,1)).*(Pos(8,4)-Pos(8,2))+Pos(8,4);
        x8 = (k8-Pos(8,4))./(Pos(8,4)-Pos(8,2)).*(Pos(8,3)-Pos(8,1))+Pos(8,3);
    end
end
% Raypath 9 (Titik2 Gradienten)
for i = 1:11
    for j = 1:5
        k9(j) = j+2;
        m9(i) = i;
        y9 = (m9-Pos(9,3))./(Pos(9,3)-Pos(9,1)).*(Pos(9,4)-Pos(9,2))+Pos(9,4);
        x9 = (k9-Pos(9,4))./(Pos(9,4)-Pos(9,2)).*(Pos(9,3)-Pos(9,1))+Pos(9,3);
    end
end
% Raypath 10 (Titik2 Gradienten)
for i = 1:11
    for j = 1:7
        k10(j) = j+2;
        m10(i) = i;
        y10 = (m10-Pos(10,3))./(Pos(10,3)-Pos(10,1)).*(Pos(10,4)-Pos(10,2))+Pos(10,4);
        x10 = (k10-Pos(10,4))./(Pos(10,4)-Pos(10,2)).*(Pos(10,3)-Pos(10,1))+Pos(10,3);
    end
end
% Raypath 11 (Titik2 Gradienten)
for i = 1:11
    for j = 1:5
        k11_1(j) = j;
        k11 = sort(k11_1,'descend');
        m11(i) = i;
        y11 = (m11-Pos(11,3))./(Pos(11,3)-Pos(11,1)).*(Pos(11,4)-Pos(11,2))+Pos(11,4);
        x11 = (k11-Pos(11,4))./(Pos(11,4)-Pos(11,2)).*(Pos(11,3)-Pos(11,1))+Pos(11,3);
    end
end
% Raypath 12 (Titik2 Gradienten)
for i = 1:11
    for j = 1:3
        k12_1(j) = j+2;
        k12 = sort(k12_1,'descend');
        m12(i) = i;
        y12 = (m12-Pos(12,3))./(Pos(12,3)-Pos(12,1)).*(Pos(12,4)-Pos(12,2))+Pos(12,4);
        x12 = (k12-Pos(12,4))./(Pos(12,4)-Pos(12,2)).*(Pos(12,3)-Pos(12,1))+Pos(12,3);
    end
end
% Raypath 14 (Titik2 Gradienten)
for i = 1:11
    for j = 1:3
        k14(j) = j+4;
        m14(i) = i;
        ye14 = (m14-Pos(14,3))./(Pos(14,3)-Pos(14,1)).*(Pos(14,4)-Pos(14,2))+Pos(14,4);
        ex14 = (k14-Pos(14,4))./(Pos(14,4)-Pos(14,2)).*(Pos(14,3)-Pos(14,1))+Pos(14,3);
    end
end
% Raypath 15 (Titik2 Gradienten)
for i = 1:11
    for j = 1:5
        k15(j) = j+4;
        m15(i) = i;
        y15 = (m15-Pos(15,3))./(Pos(15,3)-Pos(15,1)).*(Pos(15,4)-Pos(15,2))+Pos(15,4);
        x15 = (k15-Pos(15,4))./(Pos(15,4)-Pos(15,2)).*(Pos(15,3)-Pos(15,1))+Pos(15,3);
    end
end
% Raypath 16 (Titik2 Gradienten)
for i = 1:11
    for j = 1:7
        k16_1(j) = j;
        k16 = sort(k16_1,'descend');
        m16(i) = i;
        y16 = (m16-Pos(16,3))./(Pos(16,3)-Pos(16,1)).*(Pos(16,4)-Pos(16,2))+Pos(16,4);
        x16 = (k16-Pos(16,4))./(Pos(16,4)-Pos(16,2)).*(Pos(16,3)-Pos(16,1))+Pos(16,3);
    end
end
% Raypath 17 (Titik2 Gradienten)
for i = 1:11
    for j = 1:5
        k17_1(j) = j+2;
        k17 = sort(k17_1,'descend');
        m17(i) = i;
        y17 = (m17-Pos(17,3))./(Pos(17,3)-Pos(17,1)).*(Pos(17,4)-Pos(17,2))+Pos(17,4);
        x17 = (k17-Pos(17,4))./(Pos(17,4)-Pos(17,2)).*(Pos(17,3)-Pos(17,1))+Pos(17,3);
    end
end
% Raypath 18 (Titik2 Gradienten)
for i = 1:11
    for j = 1:3
        k18_1(j) = j+4;
        k18 = sort(k18_1,'descend');
        m18(i) = i;
        y18 = (m18-Pos(18,3))./(Pos(18,3)-Pos(18,1)).*(Pos(18,4)-Pos(18,2))+Pos(18,4);
        x18 = (k18-Pos(18,4))./(Pos(18,4)-Pos(18,2)).*(Pos(18,3)-Pos(18,1))+Pos(18,3);
    end
end
% Raypath 20 (Titik2 Gradienten)
for i = 1:11
    for j = 1:3
        k20(j) = j+6;
        m20(i) = i;
        y20 = (m20-Pos(20,3))./(Pos(20,3)-Pos(20,1)).*(Pos(20,4)-Pos(20,2))+Pos(20,4);
        x20 = (k20-Pos(20,4))./(Pos(20,4)-Pos(20,2)).*(Pos(20,3)-Pos(20,1))+Pos(20,3);
    end
end
% Raypath 21 (Titik2 Gradienten)
for i = 1:11
    for j = 1:9
        k21_1(j) = j;
        k21 = sort(k21_1,'descend');
        m21(i) = i;
        y21 = (m21-Pos(21,3))./(Pos(21,3)-Pos(21,1)).*(Pos(21,4)-Pos(21,2))+Pos(21,4);
        x21 = (k21-Pos(21,4))./(Pos(21,4)-Pos(21,2)).*(Pos(21,3)-Pos(21,1))+Pos(21,3);
    end
end
% Raypath 22 (Titik2 Gradienten)
for i = 1:11
    for j = 1:7
        k22_1(j) = j+2;
        k22 = sort(k22_1,'descend');
        m22(i) = i;
        y22 = (m22-Pos(22,3))./(Pos(22,3)-Pos(22,1)).*(Pos(22,4)-Pos(22,2))+Pos(22,4);
        x22 = (k22-Pos(22,4))./(Pos(22,4)-Pos(22,2)).*(Pos(22,3)-Pos(22,1))+Pos(22,3);
    end
end
% Raypath 23 (Titik2 Gradienten)
for i = 1:11
    for j = 1:5
        k23_1(j) = j+4;
        k23 = sort(k23_1,'descend');
        m23(i) = i;
        y23 = (m23-Pos(23,3))./(Pos(23,3)-Pos(23,1)).*(Pos(23,4)-Pos(23,2))+Pos(23,4);
        x23 = (k23-Pos(23,4))./(Pos(23,4)-Pos(23,2)).*(Pos(23,3)-Pos(23,1))+Pos(23,3);
    end
end
% Raypath 24 (Titik2 Gradienten)
for i = 1:11
    for j = 1:3
        k24_1(j) = j+6;
        k24 = sort(k24_1,'descend');
        m24(i) = i;
        y24 = (m24-Pos(24,3))./(Pos(24,3)-Pos(24,1)).*(Pos(24,4)-Pos(24,2))+Pos(24,4);
        x24 = (k24-Pos(24,4))./(Pos(24,4)-Pos(24,2)).*(Pos(24,3)-Pos(24,1))+Pos(24,3);
    end
end

% Menghitung Length raypath tiap sel
L12_1 = sqrt((Pos(2,1)-x(2))^2+(Pos(2,2)-y2(1,1))^2);
L12_2 = sqrt((x(2)-x(3))^2+(y2(1,1)-y2(1,2))^2);
L12_3 = sqrt((x(3)-x(4))^2+(y2(1,2)-y2(1,3))^2);
L12_4 = L12_1;
L12_5 = L12_1;
L12_6 = sqrt((x(6)-x2(2))^2+(y2(1,5)-y(3))^2);
L12_17 = sqrt((x2(2)-x(7))^2+(y(3)-y2(1,6))^2);
L12_18 = L12_1;
L12_19 = L12_1;
L12_20 = L12_1;
L12_21 = L12_1;
L12_22 = sqrt((x(11)-x(12))^2+(y2(1,10)-y2(1,11))^2);

L13_1 = sqrt((Pos(3,1)-x(2))^2+(Pos(3,2)-y3(1,1))^2);
L13_2 = L13_1;
L13_3 = sqrt((x(3)-x3(2))^2+(y3(1,2)-y(3))^2);
L13_14 = sqrt((x3(2)-x(4))^2+(y(3)-y3(1,3))^2);
L13_15 = L13_1;
L13_16 = L13_1;
L13_17 = sqrt((x(6)-x3(3))^2+(y3(1,5)-y(4))^2);
L13_28 = sqrt((x3(3)-x(7))^2+(y(4)-y3(1,6))^2);
L13_29 = L13_1;
L13_30 = L13_1;
L13_31 = sqrt((x(9)-x3(4))^2+(y3(1,8)-y(5))^2);
L13_42 = sqrt((x3(4)-x(10))^2+(y(5)-y3(1,9))^2);
L13_43 = L13_1;
L13_44 = L13_1;

L14_1 = sqrt((Pos(4,1)-x(2))^2+(Pos(4,2)-y4(1,1))^2);
L14_2 = sqrt((x(2)-x4(2))^2+(y4(1,1)-y(3))^2);
L14_13 = sqrt((x4(2)-x(3))^2+(y(3)-y4(1,2))^2);
L14_14 = L14_1;
L14_15 = sqrt((x(4)-x4(3))^2+(y4(1,3)-y(4))^2);
L14_26 = sqrt((x4(3)-x(5))^2+(y(4)-y4(1,4))^2);
L14_27 = L14_1;
L14_28 = sqrt((x(6)-x4(4))^2+(y4(1,5)-y(5))^2);
L14_39 = sqrt((x4(4)-x(7))^2+(y(5)-y4(1,6))^2);
L14_40 = L14_1;
L14_41 = sqrt((x(8)-x4(5))^2+(y4(1,7)-y(6))^2);
L14_52 = sqrt((x4(5)-x(9))^2+(y(6)-y4(1,8))^2);
L14_53 = L14_1;
L14_54 = sqrt((x(10)-x4(6))^2+(y4(1,9)-y(7))^2);
L14_65 = sqrt((x4(6)-x(11))^2+(y(7)-y4(1,10))^2);
L14_66 = L14_1;

L15_1 = sqrt((Pos(5,1)-x(2))^2+(Pos(5,2)-y5(1,1))^2);
L15_2 = sqrt((x(2)-x5(2))^2+(y5(1,1)-y(3))^2);
L15_13 = sqrt((x5(2)-x(3))^2+(y(3)-y5(1,2))^2);
L15_14 = sqrt((x(3)-x5(3))^2+(y5(1,2)-y(4))^2);
L15_25 = sqrt((x5(3)-x(4))^2+(y(4)-y5(1,3))^2);
L15_26 = L15_1;
L15_27 = sqrt((x(5)-x5(4))^2+(y5(1,4)-y(5))^2);
L15_38 = sqrt((x5(4)-x(6))^2+(y(5)-y5(1,5))^2);
L15_39 = sqrt((x(6)-x5(5))^2+(y5(1,5)-y(6))^2);
L15_50 = sqrt((x5(5)-x(7))^2+(y(6)-y5(1,6))^2);
L15_51 = sqrt((x(7)-x5(6))^2+(y5(1,6)-y(7))^2);
L15_62 = sqrt((x5(6)-x(8))^2+(y(7)-y5(1,7))^2);
L15_63 = L15_1;
L15_64 = sqrt((x(9)-x5(7))^2+(y5(1,8)-y(8))^2);
L15_75 = sqrt((x5(7)-x(10))^2+(y(8)-y5(1,9))^2);
L15_76 = sqrt((x(10)-x5(8))^2+(y5(1,9)-y(9))^2);
L15_87 = sqrt((x5(8)-x(11))^2+(y(9)-y5(1,10))^2);
L15_88 = L15_1;

L21_12 = L12_22;
L21_13 = L12_21;
L21_14 = L12_20;
L21_15 = L12_19;
L21_16 = L12_18;
L21_17 = L12_17;
L21_6 = L12_6;
L21_7 = L12_5;
L21_8 = L12_4;
L21_9 = L12_3;
L21_10 = L12_2;
L21_11 = L12_1;

L23_23 = sqrt((Pos(8,1)-x(2))^2+(Pos(8,2)-y8(1,1))^2);
L23_24 = L12_2;
L23_25 = L12_3;
L23_26 = L12_4;
L23_27 = L12_5;
L23_28 = sqrt((x(6)-x8(2))^2+(y8(1,5)-y(5))^2);
L23_39 = L12_17;
L23_40 = L12_18;
L23_41 = L12_19;
L23_42 = L12_20;
L23_43 = L12_21;
L23_44 = L12_22;

L24_23 = L13_1;
L24_24 = L13_2;
L24_25 = L13_3;
L24_36 = L13_14;
L24_37 = L13_15;
L24_38 = L13_16;
L24_39 = L13_17;
L24_50 = L13_28;
L24_51 = L13_29;
L24_52 = L13_30;
L24_53 = L13_31;
L24_64 = L13_42;
L24_65 = L13_43;
L24_66 = L13_44;

L25_23 = L14_1;
L25_24 = L14_2;
L25_35 = L14_13;
L25_36 = L14_14;
L25_37 = L14_15;
L25_48 = L14_26;
L25_49 = L14_27;
L25_50 = L14_28;
L25_61 = L14_39;
L25_62 = L14_40;
L25_63 = L14_41;
L25_74 = L14_52;
L25_75 = L14_53;
L25_76 = L14_54;
L25_87 = L14_65;
L25_88 = L14_66;

L31_34 = L13_44;
L31_35 = L13_43;
L31_36 = L13_42;
L31_25 = L13_31;
L31_26 = L13_30;
L31_27 = L13_29;
L31_28 = L13_28;
L31_17 = L13_17;
L31_18 = L13_16;
L31_19 = L13_15;
L31_20 = L13_14;
L31_9 = L13_3;
L31_10 = L13_2;
L31_11 = L13_1;

L32_34 = L23_44;
L32_35 = L23_43;
L32_36 = L23_42;
L32_37 = L23_41;
L32_38 = L23_40;
L32_39 = L23_39;
L32_28 = L23_28;
L32_29 = L23_27;
L32_30 = L23_26;
L32_31 = L23_25;
L32_32 = L23_24;
L32_33 = L23_23;

L34_45 = L23_23;
L34_46 = L23_24;
L34_47 = L23_25;
L34_48 = L23_26;
L34_49 = L23_27;
L34_50 = L23_28;
L34_61 = L23_39;
L34_62 = L23_40;
L34_63 = L23_41;
L34_64 = L23_42;
L34_65 = L23_43;
L34_66 = L23_44;

L35_45 = L24_23;
L35_46 = L24_24;
L35_47 = L24_25;
L35_58 = L24_36;
L35_59 = L24_37;
L35_60 = L24_38;
L35_61 = L24_39;
L35_72 = L24_50;
L35_73 = L24_51;
L35_74 = L24_52;
L35_75 = L24_53;
L35_86 = L24_64;
L35_87 = L24_65;
L35_88 = L24_66;

L41_56 = L14_66;
L41_57 = L14_65;
L41_46 = L14_54;
L41_47 = L14_53;
L41_48 = L14_52;
L41_37 = L14_41;
L41_38 = L14_40;
L41_39 = L14_39;
L41_28 = L14_28;
L41_29 = L14_27;
L41_30 = L14_26;
L41_19 = L14_15;
L41_20 = L14_14;
L41_21 = L14_13;
L41_10 = L14_2;
L41_11 = L14_1;

L42_56 = L24_66;
L42_57 = L24_65;
L42_58 = L24_64;
L42_47 = L24_53;
L42_48 = L24_52;
L42_49 = L24_51;
L42_50 = L24_50;
L42_39 = L24_39;
L42_40 = L24_38;
L42_41 = L24_37;
L42_42 = L24_36;
L42_31 = L24_25;
L42_32 = L24_24;
L42_33 = L24_23;

L43_56 = L34_66;
L43_57 = L34_65;
L43_58 = L34_64;
L43_59 = L34_63;
L43_60 = L34_62;
L43_61 = L34_61;
L43_50 = L34_50;
L43_51 = L34_49;
L43_52 = L34_48;
L43_53 = L34_47;
L43_54 = L34_46;
L43_55 = L34_45;

L45_67 = L34_45;
L45_68 = L34_46;
L45_69 = L34_47;
L45_70 = L34_48;
L45_71 = L34_49;
L45_72 = L34_50;
L45_83 = L34_61;
L45_84 = L34_62;
L45_85 = L34_63;
L45_86 = L34_64;
L45_87 = L34_65;
L45_88 = L34_66;

L51_78 = L15_88;
L51_79 = L15_87;
L51_68 = L15_76;
L51_69 = L15_75;
L51_58 = L15_64;
L51_59 = L15_63;
L51_60 = L15_62;
L51_49 = L15_51;
L51_50 = L15_50;
L51_39 = L15_39;
L51_40 = L15_38;
L51_29 = L15_27;
L51_30 = L15_26;
L51_31 = L15_25;
L51_20 = L15_14;
L51_21 = L15_13;
L51_10 = L15_2;
L51_11 = L15_1;

L52_78 = L25_88;
L52_79 = L25_87;
L52_68 = L25_76;
L52_69 = L25_75;
L52_70 = L25_74;
L52_59 = L25_63;
L52_60 = L25_62;
L52_61 = L25_61;
L52_50 = L25_50;
L52_51 = L25_49;
L52_52 = L25_48;
L52_41 = L25_37;
L52_42 = L25_36;
L52_43 = L25_35;
L52_32 = L25_24;
L52_33 = L25_23;

L53_78 = L35_88;
L53_79 = L35_87;
L53_80 = L35_86;
L53_69 = L35_75;
L53_70 = L35_74;
L53_71 = L35_73;
L53_72 = L35_72;
L53_61 = L35_61;
L53_62 = L35_60;
L53_63 = L35_59;
L53_64 = L35_58;
L53_53 = L35_47;
L53_54 = L35_46;
L53_55 = L35_45;

L54_78 = L45_88;
L54_79 = L45_87;
L54_80 = L45_86;
L54_81 = L45_85;
L54_82 = L45_84;
L54_83 = L45_83;
L54_72 = L45_72;
L54_73 = L45_71;
L54_74 = L45_70;
L54_75 = L45_69;
L54_76 = L45_68;
L54_77 = L45_67;

% Menghitung Slowness tiap sel
Length_Path = sum(R,2)
Sj = t./Length_Path
Slow = zeros(8,11)
Slow(1,1) = ((L12_1*Sj(2))+(L13_1*Sj(3))+(L14_1*Sj(4))+(L15_1*Sj(5)))/(L12_1+L13_1+L14_1+L15_1);
Slow(1,2) = ((L12_2*Sj(2))+(L13_2*Sj(3))+(L14_2*Sj(4))+(L15_2*Sj(5)))/(L12_2+L13_2+L14_2+L15_2);
Slow(1,3) = ((L12_3*Sj(2))+(L13_3*Sj(3)))/(L12_3+L13_3);
Slow(1,4) = (L12_4*Sj(2))/(L12_4);
Slow(1,5) = (L12_5*Sj(2))/(L12_5);
Slow(1,6) = ((L12_6*Sj(2))+(L21_6*Sj(6)))/(L12_6+L21_6);
Slow(1,7) = (L21_7*Sj(6))/(L21_7);
Slow(1,8) = (L21_8*Sj(6))/(L21_8);
Slow(1,9) = ((L21_9*Sj(6))+(L31_9*Sj(11)))/(L21_9+L31_9);
Slow(1,10) = ((L21_10*Sj(6))+(L31_10*Sj(11))+(L41_10*Sj(16))+(L51_10*Sj(21)))/(L21_10+L31_10+L41_10+L51_10);
Slow(1,11) = ((L21_11*Sj(6))+(L31_11*Sj(11))+(L41_11*Sj(16))+(L51_11*Sj(21)))/(L21_11+L31_11+L41_11+L51_11);
Slow(2,1) = (L21_12*Sj(6))/(L21_12);
Slow(2,2) = ((L14_13*Sj(4))+(L15_13*Sj(5))+(L21_13*Sj(6)))/(L14_13+L15_13+L21_13);
Slow(2,3) = ((L13_14*Sj(3))+(L14_14*Sj(4))+(L15_14*Sj(5))+(L21_14*Sj(6)))/(L13_14+L14_14+L15_14+L21_14);
Slow(2,4) = ((L13_15*Sj(3))+(L14_15*Sj(4))+(L21_15*Sj(6)))/(L13_15+L14_15+L21_15);
Slow(2,5) = ((L13_16*Sj(3))+(L21_16*Sj(6)))/(L13_16+L21_16);
Slow(2,6) = ((L12_17*Sj(2))+(L13_17*Sj(3))+(L21_17*Sj(6))+(L31_17*Sj(11)))/(L12_17+L13_17+L21_17+L31_17);
Slow(2,7) = ((L12_18*Sj(2))+(L31_18*Sj(11)))/(L12_18+L31_18);
Slow(2,8) = ((L12_19*Sj(2))+(L31_19*Sj(11))+(L41_19*Sj(16)))/(L12_19+L31_19+L41_19);
Slow(2,9) = ((L12_20*Sj(2))+(L31_20*Sj(11))+(L41_20*Sj(16))+(L51_20*Sj(21)))/(L12_20+L31_20+L41_20+L51_20);
Slow(2,10) = ((L12_21*Sj(2))+(L41_21*Sj(16))+(L51_21*Sj(21)))/(L12_21+L41_21+L51_21);
Slow(2,11) = (L12_22*Sj(2))/(L12_22);
Slow(3,1) = ((L23_23*Sj(8))+(L24_23*Sj(9))+(L25_23*Sj(10)))/(L23_23+L24_23+L25_23);
Slow(3,2) = ((L23_24*Sj(8))+(L24_24*Sj(9))+(L25_24*Sj(10)))/(L23_24+L24_24+L25_24);
Slow(3,3) = ((L15_25*Sj(5))+(L23_25*Sj(8))+(L24_25*Sj(9))+(L31_25*Sj(11)))/(L15_25+L23_25+L24_25+L31_25);
Slow(3,4) = ((L14_26*Sj(4))+(L15_26*Sj(5))+(L23_26*Sj(8))+(L31_26*Sj(11)))/(L14_26+L15_26+L23_26+L31_26);
Slow(3,5) = ((L14_27*Sj(4))+(L15_27*Sj(5))+(L23_27*Sj(8))+(L31_27*Sj(11)))/(L14_27+L15_27+L23_27+L31_27);
Slow(3,6) = ((L13_28*Sj(3))+(L14_28*Sj(4))+(L31_28*Sj(11))+(L41_28*Sj(16))+(L23_28*Sj(8))+(L32_28*Sj(12)))/(L13_28+L14_28+L31_28+L41_28+L23_28+L32_28);
Slow(3,7) = ((L13_29*Sj(3))+(L32_29*Sj(12))+(L41_29*Sj(16))+(L51_29*Sj(21)))/(L13_29+L32_29+L41_29+L51_29);
Slow(3,8) = ((L13_30*Sj(3))+(L32_30*Sj(12))+(L41_30*Sj(16))+(L51_30*Sj(21)))/(L13_30+L32_30+L41_30+L51_30);
Slow(3,9) = ((L13_31*Sj(3))+(L32_31*Sj(12))+(L42_31*Sj(17))+(L51_31*Sj(21)))/(L13_31+L32_31+L42_31+L51_31);
Slow(3,10) = ((L32_32*Sj(12))+(L42_32*Sj(17))+(L52_32*Sj(22)))/(L32_32+L42_32+L52_32);
Slow(3,11) = ((L32_33*Sj(12))+(L42_33*Sj(17))+(L52_33*Sj(22)))/(L32_33+L42_33+L52_33);
Slow(4,1) = ((L31_34*Sj(11))+(L32_34*Sj(12)))/(L31_34+L32_34);
Slow(4,2) = ((L25_35*Sj(10))+(L31_35*Sj(11))+(L32_35*Sj(12)))/(L25_35+L31_35+L32_35);
Slow(4,3) = ((L24_36*Sj(9))+(L25_36*Sj(10))+(L31_36*Sj(11))+(L32_36*Sj(12)))/(L24_36+L25_36+L31_36+L32_36);
Slow(4,4) = ((L24_37*Sj(9))+(L25_37*Sj(10))+(L32_37*Sj(12))+(L41_37*Sj(16)))/(L24_37+L25_37+L32_37+L41_37);
Slow(4,5) = ((L15_38*Sj(5))+(L24_38*Sj(9))+(L32_38*Sj(12))+(L41_38*Sj(16)))/(L15_38+L24_38+L32_38+L41_38);
Slow(4,6) = ((L14_39*Sj(4))+(L15_39*Sj(5))+(L23_39*Sj(8))+(L24_39*Sj(9))+(L32_39*Sj(12))+(L41_39*Sj(16))+(L42_39*Sj(17))+(L51_39*Sj(21)))/(L14_39+L15_39+L23_39+L24_39+L32_39+L41_39+L42_39+L51_39);
Slow(4,7) = ((L14_40*Sj(4))+(L23_40*Sj(8))+(L42_40*Sj(17))+(L51_40*Sj(21)))/(L14_40+L23_40+L42_40+L51_40);
Slow(4,8) = ((L14_41*Sj(4))+(L23_41*Sj(8))+(L42_41*Sj(17))+(L52_41*Sj(22)))/(L14_41+L23_41+L42_41+L52_41);
Slow(4,9) = ((L13_42*Sj(3))+(L23_42*Sj(8))+(L42_42*Sj(17))+(L52_42*Sj(22)))/(L13_42+L23_42+L42_42+L52_42);
Slow(4,10) = ((L13_43*Sj(3))+(L23_43*Sj(8))+(L52_43*Sj(22)))/(L13_43+L23_43+L52_43);
Slow(4,11) = ((L13_44*Sj(3))+(L23_44*Sj(8)))/(L13_44+L23_44);
Slow(5,1) = ((L34_45*Sj(14))+(L35_45*Sj(15)))/(L34_45+L35_45);
Slow(5,2) = ((L34_46*Sj(14))+(L35_46*Sj(15))+(L41_46*Sj(16)))/(L34_46+L35_46+L41_46);
Slow(5,3) = ((L34_47*Sj(14))+(L35_47*Sj(15))+(L41_47*Sj(16))+(L42_47*Sj(17)))/(L34_47+L35_47+L41_47+L42_47);
Slow(5,4) = ((L25_48*Sj(10))+(L34_48*Sj(14))+(L41_48*Sj(16))+(L42_48*Sj(17)))/(L25_48+L34_48+L41_48+L42_48);
Slow(5,5) = ((L25_49*Sj(10))+(L34_49*Sj(14))+(L42_49*Sj(17))+(L51_49*Sj(21)))/(L25_49+L34_49+L42_49+L51_49);
Slow(5,6) = ((L15_50*Sj(5))+(L24_50*Sj(9))+(L25_50*Sj(10))+(L34_50*Sj(14))+(L42_50*Sj(17))+(L43_50*Sj(18))+(L51_50*Sj(21))+(L52_50*Sj(22)))/(L15_50+L24_50+L25_50+L34_50+L42_50+L43_50+L51_50+L52_50);
Slow(5,7) = ((L15_51*Sj(5))+(L24_51*Sj(9))+(L43_51*Sj(18))+(L52_51*Sj(22)))/(L15_51+L24_51+L43_51+L52_51);
Slow(5,8) = ((L14_52*Sj(4))+(L24_52*Sj(9))+(L43_52*Sj(18))+(L52_52*Sj(22)))/(L14_52+L24_52+L43_52+L52_52);
Slow(5,9) = ((L14_53*Sj(4))+(L24_53*Sj(9))+(L43_53*Sj(18))+(L53_53*Sj(23)))/(L14_53+L24_53+L43_53+L53_53);
Slow(5,10) = ((L14_54*Sj(4))+(L43_54*Sj(18))+(L53_54*Sj(23)))/(L14_54+L43_54+L53_54);
Slow(5,11) = ((L43_55*Sj(18))+(L53_55*Sj(23)))/(L43_55+L53_55);
Slow(6,1) = ((L41_56*Sj(16))+(L42_56*Sj(17))+(L43_56*Sj(18)))/(L41_56+L42_56+L43_56);
Slow(6,2) = ((L41_57*Sj(16))+(L42_57*Sj(17))+(L43_57*Sj(18)))/(L41_57+L42_57+L43_57);
Slow(6,3) = ((L35_58*Sj(15))+(L42_58*Sj(17))+(L43_58*Sj(18))+(L51_58*Sj(21)))/(L35_58+L42_58+L43_58+L51_58);
Slow(6,4) = ((L35_59*Sj(15))+(L43_59*Sj(18))+(L51_59*Sj(21))+(L52_59*Sj(22)))/(L35_59+L43_59+L51_59+L52_59);
Slow(6,5) = ((L35_60*Sj(15))+(L43_60*Sj(18))+(L51_60*Sj(21))+(L52_60*Sj(22)))/(L35_60+L43_60+L51_60+L52_60);
Slow(6,6) = ((L25_61*Sj(10))+(L34_61*Sj(14))+(L35_61*Sj(15))+(L43_61*Sj(18))+(L52_61*Sj(22))+(L53_61*Sj(23)))/(L25_61+L34_61+L35_61+L43_61+L52_61+L53_61);
Slow(6,7) = ((L15_62*Sj(5))+(L25_62*Sj(10))+(L34_62*Sj(14))+(L53_62*Sj(23)))/(L15_62+L25_62+L34_62+L53_62);
Slow(6,8) = ((L15_63*Sj(5))+(L25_63*Sj(10))+(L34_63*Sj(14))+(L53_63*Sj(23)))/(L15_63+L25_63+L34_63+L53_63);
Slow(6,9) = ((L15_64*Sj(5))+(L24_64*Sj(9))+(L34_64*Sj(14))+(L53_64*Sj(23)))/(L15_64+L24_64+L34_64+L53_64);
Slow(6,10) = ((L14_65*Sj(4))+(L24_65*Sj(9))+(L34_65*Sj(14)))/(L14_65+L24_65+L34_65);
Slow(6,11) = ((L14_66*Sj(4))+(L24_66*Sj(9))+(L34_66*Sj(14)))/(L14_66+L24_66+L34_66);
Slow(7,1) = (L45_67*Sj(20))/(L45_67);
Slow(7,2) = ((L45_68*Sj(20))+(L51_68*Sj(21))+(L52_68*Sj(22)))/(L45_68+L51_68+L52_68);
Slow(7,3) = ((L45_69*Sj(20))+(L51_69*Sj(21))+(L52_69*Sj(22))+(L53_69*Sj(23)))/(L45_69+L51_69+L52_69+L53_69);
Slow(7,4) = ((L45_70*Sj(20))+(L52_70*Sj(22))+(L53_70*Sj(23)))/(L45_70+L52_70+L53_70);
Slow(7,5) = ((L45_71*Sj(20))+(L53_71*Sj(23)))/(L45_71+L53_71);
Slow(7,6) = ((L35_72*Sj(15))+(L45_72*Sj(20))+(L53_72*Sj(23))+(L54_72*Sj(24)))/(L35_72+L45_72+L53_72+L54_72);
Slow(7,7) = ((L35_73*Sj(15))+(L54_73*Sj(24)))/(L35_73+L54_73);
Slow(7,8) = ((L25_74*Sj(10))+(L35_74*Sj(15))+(L54_74*Sj(24)))/(L25_74+L35_74+L54_74);
Slow(7,9) = ((L15_75*Sj(5))+(L25_75*Sj(10))+(L35_75*Sj(15))+(L54_75*Sj(24)))/(L15_75+L25_75+L35_75+L54_75);
Slow(7,10) = ((L15_76*Sj(5))+(L25_76*Sj(10))+(L54_76*Sj(24)))/(L15_76+L25_76+L54_76);
Slow(7,11) = (L54_77*Sj(24))/(L54_77);
Slow(8,1) = ((L51_78*Sj(21))+(L52_78*Sj(22))+(L53_78*Sj(23))+(L54_78*Sj(24)))/(L51_78+L52_78+L53_78+L54_78);
Slow(8,2) = ((L51_79*Sj(21))+(L52_79*Sj(22))+(L53_79*Sj(23))+(L54_79*Sj(24)))/(L51_79+L52_79+L53_79+L54_79);
Slow(8,3) = ((L53_80*Sj(23))+(L54_80*Sj(24)))/(L53_80+L54_80);
Slow(8,4) = (L54_81*Sj(24))/(L54_81);
Slow(8,5) = (L54_82*Sj(24))/(L54_82);
Slow(8,6) = ((L45_83*Sj(20))+(L54_83*Sj(24)))/(L45_83+L54_83);
Slow(8,7) = (L45_84*Sj(20))/(L45_84);
Slow(8,8) = (L45_85*Sj(20))/(L45_85);
Slow(8,9) = ((L35_86*Sj(15))+(L45_86*Sj(20)))/(L35_86+L45_86);
Slow(8,10) = ((L15_87*Sj(5))+(L25_87*Sj(10))+(L35_87*Sj(15))+(L45_87*Sj(20)))/(L15_87+L25_87+L35_87+L45_87);
Slow(8,11) = ((L15_88*Sj(5))+(L25_88*Sj(10))+(L35_88*Sj(15))+(L45_88*Sj(20)))/(L15_88+L25_88+L35_88+L45_88);
Vel = 1./Slow;

% Mengeplot inverse modelling
m = 1:1:11;
n = 1:1:8;
% [Mesh.X Mesh.Y] = meshgrid(m,n);
figure(2)
imagesc(m,n,Vel);
ax = gca;
ax.GridColor = 'blue';
ax.LineWidth = 1.5;
ax.YTick = 0.5:1:10;
ax.XTick = 0.5:1:11;
grid on;
% pcolor(Mesh.X,Mesh.Y,Vel);
colormap(cool);
set(gca,'Ydir','Reverse');
colorbar;
